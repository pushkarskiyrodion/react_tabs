{"version":3,"sources":["components/TabInfo/TabInfo.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabInfo","currentTabId","tab","onTabSelect","id","title","className","cn","href","onClick","Tabs","props","selectedTabId","tabs","onTabSelected","currentTab","find","handleSelectTab","useCallback","map","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA2B,SAAC,GAEnC,IADFC,EACC,EADDA,aAAcC,EACb,EADaA,IAAKC,EAClB,EADkBA,YAEbC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAEZ,OACE,oBACE,UAAQ,MAERC,UAAWC,IAAG,CAAE,YAAaH,IAAOH,IAHtC,SAKE,mBACEO,KAAI,WAAMJ,GACV,UAAQ,UACRK,QAAS,WACPN,EAAYD,IAJhB,SAOGG,KAVED,ICNEM,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,cACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,cAGIC,EAAaF,EAAKG,MAAK,SAAAd,GAAG,OAAIA,EAAIE,KAAOQ,MAAkBC,EAAK,GAEhEI,EAAkBC,uBAAY,SAAChB,GAC/BA,EAAIE,KAAOQ,GACbE,EAAcZ,KAEf,CAACU,IAEJ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKN,UAAU,gBAAf,SACE,6BACGO,EAAKM,KAAI,SAAAjB,GAAG,OACX,cAAC,EAAD,CACEA,IAAKA,EACLC,YAAa,kBAAMc,EAAgBf,IACnCD,aAAcc,EAAWX,YAMjC,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGS,EAAWK,cCpCPP,EAAO,CAClB,CAAET,GAAI,QAASC,MAAO,QAASe,QAAS,eACxC,CAAEhB,GAAI,QAASC,MAAO,QAASe,QAAS,eACxC,CAAEhB,GAAI,QAASC,MAAO,QAASe,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAST,EAAK,IAApD,mBAAOU,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKlB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBiB,EAAYlB,SAGlC,cAAC,EAAD,CACEQ,KAAMA,EACND,cAAeW,EAAYnB,GAC3BU,cAAeU,QCrBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b9964019.chunk.js","sourcesContent":["import cn from 'classnames';\n\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab;\n  currentTabId: string;\n  onTabSelect: (tab: Tab) => void;\n};\n\nexport const TabInfo: React.FC<Props> = (\n  { currentTabId, tab, onTabSelect },\n) => {\n  const { id, title } = tab;\n\n  return (\n    <li\n      data-cy=\"Tab\"\n      key={id}\n      className={cn({ 'is-active': id === currentTabId })}\n    >\n      <a\n        href={`#${id}`}\n        data-cy=\"TabLink\"\n        onClick={() => {\n          onTabSelect(tab);\n        }}\n      >\n        {title}\n      </a>\n    </li>\n  );\n};\n","import { useCallback } from 'react';\n\nimport { TabInfo } from '../TabInfo/TabInfo';\n\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  onTabSelected: (tab: Tab) => void;\n  selectedTabId: string;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    selectedTabId,\n    tabs,\n    onTabSelected,\n  } = props;\n\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleSelectTab = useCallback((tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  }, [selectedTabId]);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <TabInfo\n              tab={tab}\n              onTabSelect={() => handleSelectTab(tab)}\n              currentTabId={currentTab.id}\n            />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}